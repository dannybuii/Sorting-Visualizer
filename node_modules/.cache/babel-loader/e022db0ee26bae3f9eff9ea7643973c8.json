{"ast":null,"code":"export function quickSort(array) {\n  const animations = []; // let low = 0;\n  // let high = array.length - 1;\n\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(array, l, h, animations) {\n  if (l < h) {\n    let pi = partition(array, l, h, animations);\n    quickSortHelper(array, l, pi - 1, animations);\n    quickSortHelper(array, pi + 1, h, animations);\n  }\n}\n\nfunction partition(array, l, h, animations) {\n  let pivot = array[h];\n  let i = l - 1;\n  let left = l;\n  let right = h;\n  animations.push([i, pivot]);\n\n  for (let j = l; j <= h - 1; j++) {\n    animations.push([j, h]);\n    animations.push([j, h]);\n\n    if (array[j] < pivot) {\n      i++;\n      animations.push([i, array[j]]);\n      animations.push([j, array[i]]);\n      swap(array, i, j);\n    }\n  }\n\n  animations.push([h, array[i + 1]]);\n  animations.push([i + 1, array[h]]);\n  swap(array, i + 1, h);\n  return i + 1;\n}\n\nfunction swap(array, i, j) {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}","map":{"version":3,"sources":["C:/Users/Danny/Documents/Sorting Visualizer/my-app/src/SortingVisualizerAlgorithms/quickSort.js"],"names":["quickSort","array","animations","quickSortHelper","length","l","h","pi","partition","pivot","i","left","right","push","j","swap","temp"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAMC,UAAU,GAAG,EAAnB,CAD+B,CAE/B;AACA;;AACAC,EAAAA,eAAe,CAACF,KAAD,EAAQ,CAAR,EAAWA,KAAK,CAACG,MAAN,GAAe,CAA1B,EAA6BF,UAA7B,CAAf;AACA,SAAOA,UAAP;AACD;;AAED,SAASC,eAAT,CAAyBF,KAAzB,EAAgCI,CAAhC,EAAmCC,CAAnC,EAAsCJ,UAAtC,EAAkD;AAChD,MAAIG,CAAC,GAAGC,CAAR,EAAW;AACT,QAAIC,EAAE,GAAGC,SAAS,CAACP,KAAD,EAAQI,CAAR,EAAWC,CAAX,EAAcJ,UAAd,CAAlB;AACAC,IAAAA,eAAe,CAACF,KAAD,EAAQI,CAAR,EAAWE,EAAE,GAAG,CAAhB,EAAmBL,UAAnB,CAAf;AACAC,IAAAA,eAAe,CAACF,KAAD,EAAQM,EAAE,GAAG,CAAb,EAAgBD,CAAhB,EAAmBJ,UAAnB,CAAf;AACD;AACF;;AAED,SAASM,SAAT,CAAmBP,KAAnB,EAA0BI,CAA1B,EAA6BC,CAA7B,EAAgCJ,UAAhC,EAA4C;AAC1C,MAAIO,KAAK,GAAGR,KAAK,CAACK,CAAD,CAAjB;AAEA,MAAII,CAAC,GAAGL,CAAC,GAAG,CAAZ;AAEA,MAAIM,IAAI,GAAGN,CAAX;AACA,MAAIO,KAAK,GAAGN,CAAZ;AACAJ,EAAAA,UAAU,CAACW,IAAX,CAAgB,CAACH,CAAD,EAAID,KAAJ,CAAhB;;AACA,OAAK,IAAIK,CAAC,GAAGT,CAAb,EAAgBS,CAAC,IAAIR,CAAC,GAAG,CAAzB,EAA4BQ,CAAC,EAA7B,EAAiC;AAC/BZ,IAAAA,UAAU,CAACW,IAAX,CAAgB,CAACC,CAAD,EAAIR,CAAJ,CAAhB;AACAJ,IAAAA,UAAU,CAACW,IAAX,CAAgB,CAACC,CAAD,EAAIR,CAAJ,CAAhB;;AACA,QAAIL,KAAK,CAACa,CAAD,CAAL,GAAWL,KAAf,EAAsB;AACpBC,MAAAA,CAAC;AACDR,MAAAA,UAAU,CAACW,IAAX,CAAgB,CAACH,CAAD,EAAIT,KAAK,CAACa,CAAD,CAAT,CAAhB;AACAZ,MAAAA,UAAU,CAACW,IAAX,CAAgB,CAACC,CAAD,EAAIb,KAAK,CAACS,CAAD,CAAT,CAAhB;AACAK,MAAAA,IAAI,CAACd,KAAD,EAAQS,CAAR,EAAWI,CAAX,CAAJ;AACD;AACF;;AACDZ,EAAAA,UAAU,CAACW,IAAX,CAAgB,CAACP,CAAD,EAAIL,KAAK,CAACS,CAAC,GAAG,CAAL,CAAT,CAAhB;AACAR,EAAAA,UAAU,CAACW,IAAX,CAAgB,CAACH,CAAC,GAAG,CAAL,EAAQT,KAAK,CAACK,CAAD,CAAb,CAAhB;AACAS,EAAAA,IAAI,CAACd,KAAD,EAAQS,CAAC,GAAG,CAAZ,EAAeJ,CAAf,CAAJ;AACA,SAAOI,CAAC,GAAG,CAAX;AACD;;AAED,SAASK,IAAT,CAAcd,KAAd,EAAqBS,CAArB,EAAwBI,CAAxB,EAA2B;AACzB,MAAIE,IAAI,GAAGf,KAAK,CAACS,CAAD,CAAhB;AACAT,EAAAA,KAAK,CAACS,CAAD,CAAL,GAAWT,KAAK,CAACa,CAAD,CAAhB;AACAb,EAAAA,KAAK,CAACa,CAAD,CAAL,GAAWE,IAAX;AACD","sourcesContent":["export function quickSort(array) {\r\n  const animations = [];\r\n  // let low = 0;\r\n  // let high = array.length - 1;\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSortHelper(array, l, h, animations) {\r\n  if (l < h) {\r\n    let pi = partition(array, l, h, animations);\r\n    quickSortHelper(array, l, pi - 1, animations);\r\n    quickSortHelper(array, pi + 1, h, animations);\r\n  }\r\n}\r\n\r\nfunction partition(array, l, h, animations) {\r\n  let pivot = array[h];\r\n\r\n  let i = l - 1;\r\n\r\n  let left = l;\r\n  let right = h;\r\n  animations.push([i, pivot]);\r\n  for (let j = l; j <= h - 1; j++) {\r\n    animations.push([j, h]);\r\n    animations.push([j, h]);\r\n    if (array[j] < pivot) {\r\n      i++;\r\n      animations.push([i, array[j]]);\r\n      animations.push([j, array[i]]);\r\n      swap(array, i, j);\r\n    }\r\n  }\r\n  animations.push([h, array[i + 1]]);\r\n  animations.push([i + 1, array[h]]);\r\n  swap(array, i + 1, h);\r\n  return i + 1;\r\n}\r\n\r\nfunction swap(array, i, j) {\r\n  let temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}