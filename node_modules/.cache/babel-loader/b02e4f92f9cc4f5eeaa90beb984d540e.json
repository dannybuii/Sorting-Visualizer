{"ast":null,"code":"export function quickSort(array) {\n  const animations = [];\n  quickSortHelper(array, 0, array.length - 1, animations);\n  console.log(animations);\n  return animations;\n}\n\nfunction quickSortHelper(array, l, h, animations) {\n  if (l < h) {\n    let pi = partition(array, l, h, animations);\n    quickSortHelper(array, l, pi - 1, animations);\n    quickSortHelper(array, pi + 1, h, animations);\n  }\n}\n\nfunction partition(array, l, h, animations) {\n  let pivot = array[h];\n  let i = l - 1;\n  let pivotIndex = l; // animations.push([\"pivot\", pivotIndex, pivot]);\n\n  for (let j = l; j <= h - 1; j++) {\n    // animations.push([\"compare\", j, h]);\n    // animations.push([\"compare\", j, h]);\n    animations.push([j, h]);\n    animations.push([j, h]);\n\n    if (array[j] < pivot) {\n      i++; // animations.push([\"swap\", i, array[j]]);\n      // animations.push([\"swap\", j, array[i]]);\n\n      animations.push([i, array[j]]);\n      animations.push([j, array[i]]);\n      swap(array, i, j);\n    } else {\n      animations.push([0, 0]);\n      animations.push([0, 0]);\n    }\n\n    animations.push([0, 0]);\n    animations.push([0, 0]);\n  }\n\n  animations.push([0, 0]);\n  animations.push([0, 0]);\n  animations.push([0, 0]);\n  animations.push([0, 0]); // animations.push([\"swap\", h, array[i + 1]]);\n  // animations.push([\"swap\", i + 1, array[h]]);\n\n  animations.push([h, array[i + 1]]);\n  animations.push([i + 1, array[h]]);\n  swap(array, i + 1, h);\n  return i + 1;\n}\n\nfunction swap(array, i, j) {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}","map":{"version":3,"sources":["C:/Users/Danny/Documents/Sorting Visualizer/my-app/src/SortingVisualizerAlgorithms/quickSort.js"],"names":["quickSort","array","animations","quickSortHelper","length","console","log","l","h","pi","partition","pivot","i","pivotIndex","j","push","swap","temp"],"mappings":"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","sourcesContent":["export function quickSort(array) {\r\n  const animations = [];\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  console.log(animations);\r\n\r\n  return animations;\r\n}\r\n\r\nfunction quickSortHelper(array, l, h, animations) {\r\n  if (l < h) {\r\n    let pi = partition(array, l, h, animations);\r\n    quickSortHelper(array, l, pi - 1, animations);\r\n    quickSortHelper(array, pi + 1, h, animations);\r\n  }\r\n}\r\n\r\nfunction partition(array, l, h, animations) {\r\n  let pivot = array[h];\r\n  let i = l - 1;\r\n  let pivotIndex = l;\r\n  // animations.push([\"pivot\", pivotIndex, pivot]);\r\n  for (let j = l; j <= h - 1; j++) {\r\n    // animations.push([\"compare\", j, h]);\r\n    // animations.push([\"compare\", j, h]);\r\n    animations.push([j, h]);\r\n    animations.push([j, h]);\r\n    if (array[j] < pivot) {\r\n      i++;\r\n      // animations.push([\"swap\", i, array[j]]);\r\n      // animations.push([\"swap\", j, array[i]]);\r\n\r\n      animations.push([i, array[j]]);\r\n      animations.push([j, array[i]]);\r\n      swap(array, i, j);\r\n    } else {\r\n      animations.push([0, 0]);\r\n      animations.push([0, 0]);\r\n    }\r\n    animations.push([0, 0]);\r\n    animations.push([0, 0]);\r\n  }\r\n\r\n  animations.push([0, 0]);\r\n  animations.push([0, 0]);\r\n\r\n  animations.push([0, 0]);\r\n  animations.push([0, 0]);\r\n\r\n  // animations.push([\"swap\", h, array[i + 1]]);\r\n  // animations.push([\"swap\", i + 1, array[h]]);\r\n\r\n  animations.push([h, array[i + 1]]);\r\n  animations.push([i + 1, array[h]]);\r\n  swap(array, i + 1, h);\r\n  return i + 1;\r\n}\r\n\r\nfunction swap(array, i, j) {\r\n  let temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}