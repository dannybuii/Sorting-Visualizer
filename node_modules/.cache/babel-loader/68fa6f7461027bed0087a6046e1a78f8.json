{"ast":null,"code":"import React from \"react\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 310; i++) {\n      array.push(randomInteger(5, 1000));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return {};\n  }\n\n}\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["C:/Users/Danny/Desktop/Sorting Visualizer/my-app/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","SortingVisualizer","Component","constructor","props","state","array","resetArray","i","push","randomInteger","setState","render","min","max","Math","floor","random"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,UAAU,GAAG;AACX,UAAMD,KAAK,GAAG,EAAd;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BF,MAAAA,KAAK,CAACG,IAAN,CAAWC,aAAa,CAAC,CAAD,EAAI,IAAJ,CAAxB;AACD;;AACD,SAAKC,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,WAAO,EAAP;AACD;;AAtB4D;;AAyB/D,SAASK,aAAT,CAAuBG,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD","sourcesContent":["import React from \"react\";\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n\r\n    for (let i = 0; i < 310; i++) {\r\n      array.push(randomInteger(5, 1000));\r\n    }\r\n    this.setState({ array });\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return {};\r\n  }\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}