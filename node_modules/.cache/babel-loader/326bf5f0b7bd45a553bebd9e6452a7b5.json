{"ast":null,"code":"export const mergeSort = array => {\n  const animations = [];\n\n  if (array.length <= 1) {\n    return array;\n  }\n\n  const middlePoint = Math.floor(array.length / 2);\n  const tempL = array.slice(0, middlePoint);\n  const tempR = array.slice(middlePoint);\n  return mergeSortHelper(mergeSort(tempL), mergeSort(tempR), animations);\n};\n\nfunction mergeSortHelper(left, right, animations) {\n  let sortArray = [];\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\n  while (i < left.length && j < right.length) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n\n    if (left[i] <= right[j]) {\n      animations.push([k, left[i]]);\n      sortArray.push(left[i]);\n      i++;\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      sortArray.push(right[j]);\n      j++;\n    }\n\n    animations.push(animation);\n    k++;\n  }\n\n  return sortArray.concat(left.slice(i)).concat(right.slice(j));\n}","map":{"version":3,"sources":["C:/Users/Danny/Desktop/Sorting Visualizer/my-app/src/SortingVisualizerAlgorithms/mergeSort.js"],"names":["mergeSort","array","animations","length","middlePoint","Math","floor","tempL","slice","tempR","mergeSortHelper","left","right","sortArray","i","j","k","push","auxiliaryArray","animation","concat"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,KAAD,IAAW;AAClC,QAAMC,UAAU,GAAG,EAAnB;;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB;AACrB,WAAOF,KAAP;AACD;;AAED,QAAMG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACE,MAAN,GAAe,CAA1B,CAApB;AACA,QAAMI,KAAK,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeJ,WAAf,CAAd;AACA,QAAMK,KAAK,GAAGR,KAAK,CAACO,KAAN,CAAYJ,WAAZ,CAAd;AAEA,SAAOM,eAAe,CAACV,SAAS,CAACO,KAAD,CAAV,EAAmBP,SAAS,CAACS,KAAD,CAA5B,EAAqCP,UAArC,CAAtB;AACD,CAXM;;AAaP,SAASQ,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCV,UAAtC,EAAkD;AAChD,MAAIW,SAAS,GAAG,EAAhB;AAEA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,SAAOF,CAAC,GAAGH,IAAI,CAACR,MAAT,IAAmBY,CAAC,GAAGH,KAAK,CAACT,MAApC,EAA4C;AAC1CD,IAAAA,UAAU,CAACe,IAAX,CAAgB,CAACH,CAAD,EAAIC,CAAJ,CAAhB;AACAb,IAAAA,UAAU,CAACe,IAAX,CAAgB,CAACH,CAAD,EAAIC,CAAJ,CAAhB;;AACA,QAAIJ,IAAI,CAACG,CAAD,CAAJ,IAAWF,KAAK,CAACG,CAAD,CAApB,EAAyB;AACvBb,MAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIL,IAAI,CAACG,CAAD,CAAR,CAAhB;AACAD,MAAAA,SAAS,CAACI,IAAV,CAAeN,IAAI,CAACG,CAAD,CAAnB;AACAA,MAAAA,CAAC;AACF,KAJD,MAIO;AACLZ,MAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIE,cAAc,CAACH,CAAD,CAAlB,CAAhB;AACAF,MAAAA,SAAS,CAACI,IAAV,CAAeL,KAAK,CAACG,CAAD,CAApB;AACAA,MAAAA,CAAC;AACF;;AACDb,IAAAA,UAAU,CAACe,IAAX,CAAgBE,SAAhB;AACAH,IAAAA,CAAC;AACF;;AAED,SAAOH,SAAS,CAACO,MAAV,CAAiBT,IAAI,CAACH,KAAL,CAAWM,CAAX,CAAjB,EAAgCM,MAAhC,CAAuCR,KAAK,CAACJ,KAAN,CAAYO,CAAZ,CAAvC,CAAP;AACD","sourcesContent":["export const mergeSort = (array) => {\r\n  const animations = [];\r\n  if (array.length <= 1) {\r\n    return array;\r\n  }\r\n\r\n  const middlePoint = Math.floor(array.length / 2);\r\n  const tempL = array.slice(0, middlePoint);\r\n  const tempR = array.slice(middlePoint);\r\n\r\n  return mergeSortHelper(mergeSort(tempL), mergeSort(tempR), animations);\r\n};\r\n\r\nfunction mergeSortHelper(left, right, animations) {\r\n  let sortArray = [];\r\n\r\n  let i = 0;\r\n  let j = 0;\r\n  let k = 0;\r\n\r\n  while (i < left.length && j < right.length) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (left[i] <= right[j]) {\r\n      animations.push([k, left[i]]);\r\n      sortArray.push(left[i]);\r\n      i++;\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      sortArray.push(right[j]);\r\n      j++;\r\n    }\r\n    animations.push(animation);\r\n    k++;\r\n  }\r\n\r\n  return sortArray.concat(left.slice(i)).concat(right.slice(j));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}