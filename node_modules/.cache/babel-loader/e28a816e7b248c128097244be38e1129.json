{"ast":null,"code":"export function quickSort(array) {\n  const sortedArray = [];\n  let low = array[0];\n  let high = array(array.length - 1);\n  quickSortHelper(array, low, high);\n  return \"LOl\";\n}\n\nfunction quickSortHelper(array, l, h) {\n  if (l < h) {\n    let pi = partition(array, l, h);\n    quickSortHelper(array, l, pi - 1);\n    quickSortHelper(array, pi + 1, h);\n  }\n\n  return array;\n}\n\nfunction partition(array, l, h) {\n  let pivot = array[h];\n  let i = l - 1;\n\n  for (let j = l; j <= h - 1; j++) {\n    if (array[j] < pivot) {\n      i++; //swap array[i] and array[j]\n\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  } //swap array[i + 1] and array[high])\n\n\n  let temp2 = array[i + 1];\n  array[i + 1] = array[h];\n  array[h] = temp2;\n  return i + 1;\n}","map":{"version":3,"sources":["C:/Users/Danny/Documents/Sorting Visualizer/my-app/src/SortingVisualizerAlgorithms/quickSort.js"],"names":["quickSort","array","sortedArray","low","high","length","quickSortHelper","l","h","pi","partition","pivot","i","j","temp","temp2"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,QAAMC,WAAW,GAAG,EAApB;AACA,MAAIC,GAAG,GAAGF,KAAK,CAAC,CAAD,CAAf;AACA,MAAIG,IAAI,GAAGH,KAAK,CAACA,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAhB;AACAC,EAAAA,eAAe,CAACL,KAAD,EAAQE,GAAR,EAAaC,IAAb,CAAf;AAEA,SAAO,KAAP;AACD;;AAED,SAASE,eAAT,CAAyBL,KAAzB,EAAgCM,CAAhC,EAAmCC,CAAnC,EAAsC;AACpC,MAAID,CAAC,GAAGC,CAAR,EAAW;AACT,QAAIC,EAAE,GAAGC,SAAS,CAACT,KAAD,EAAQM,CAAR,EAAWC,CAAX,CAAlB;AACAF,IAAAA,eAAe,CAACL,KAAD,EAAQM,CAAR,EAAWE,EAAE,GAAG,CAAhB,CAAf;AACAH,IAAAA,eAAe,CAACL,KAAD,EAAQQ,EAAE,GAAG,CAAb,EAAgBD,CAAhB,CAAf;AACD;;AAED,SAAOP,KAAP;AACD;;AAED,SAASS,SAAT,CAAmBT,KAAnB,EAA0BM,CAA1B,EAA6BC,CAA7B,EAAgC;AAC9B,MAAIG,KAAK,GAAGV,KAAK,CAACO,CAAD,CAAjB;AAEA,MAAII,CAAC,GAAGL,CAAC,GAAG,CAAZ;;AAEA,OAAK,IAAIM,CAAC,GAAGN,CAAb,EAAgBM,CAAC,IAAIL,CAAC,GAAG,CAAzB,EAA4BK,CAAC,EAA7B,EAAiC;AAC/B,QAAIZ,KAAK,CAACY,CAAD,CAAL,GAAWF,KAAf,EAAsB;AACpBC,MAAAA,CAAC,GADmB,CAEpB;;AACA,UAAIE,IAAI,GAAGb,KAAK,CAACW,CAAD,CAAhB;AACAX,MAAAA,KAAK,CAACW,CAAD,CAAL,GAAWX,KAAK,CAACY,CAAD,CAAhB;AACAZ,MAAAA,KAAK,CAACY,CAAD,CAAL,GAAWC,IAAX;AACD;AACF,GAb6B,CAe9B;;;AACA,MAAIC,KAAK,GAAGd,KAAK,CAACW,CAAC,GAAG,CAAL,CAAjB;AACAX,EAAAA,KAAK,CAACW,CAAC,GAAG,CAAL,CAAL,GAAeX,KAAK,CAACO,CAAD,CAApB;AACAP,EAAAA,KAAK,CAACO,CAAD,CAAL,GAAWO,KAAX;AAEA,SAAOH,CAAC,GAAG,CAAX;AACD","sourcesContent":["export function quickSort(array) {\r\n  const sortedArray = [];\r\n  let low = array[0];\r\n  let high = array(array.length - 1);\r\n  quickSortHelper(array, low, high);\r\n\r\n  return \"LOl\";\r\n}\r\n\r\nfunction quickSortHelper(array, l, h) {\r\n  if (l < h) {\r\n    let pi = partition(array, l, h);\r\n    quickSortHelper(array, l, pi - 1);\r\n    quickSortHelper(array, pi + 1, h);\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nfunction partition(array, l, h) {\r\n  let pivot = array[h];\r\n\r\n  let i = l - 1;\r\n\r\n  for (let j = l; j <= h - 1; j++) {\r\n    if (array[j] < pivot) {\r\n      i++;\r\n      //swap array[i] and array[j]\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n  }\r\n\r\n  //swap array[i + 1] and array[high])\r\n  let temp2 = array[i + 1];\r\n  array[i + 1] = array[h];\r\n  array[h] = temp2;\r\n\r\n  return i + 1;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}