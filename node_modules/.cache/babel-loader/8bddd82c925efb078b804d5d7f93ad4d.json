{"ast":null,"code":"export const mergeSort = array => {\n  const animations = [];\n\n  if (array.length <= 1) {\n    return array;\n  }\n\n  const auxArray = array.slice();\n  const middlePoint = Math.floor(array.length / 2);\n  const tempL = array.slice(0, middlePoint);\n  const tempR = array.slice(middlePoint);\n  return mergeSortHelper(mergeSort(tempL), mergeSort(tempR), middlePoint, array, auxArray, animations);\n};\n\nfunction mergeSortHelper(left, right, mid, main, aux, animation) {\n  let sortArray = [];\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\n  while (i < left.length && j < right.length) {\n    animation.push([i, j]);\n    animation.push([i, j]);\n\n    if (left[i] <= right[j]) {\n      sortArray.push(left[i]);\n      i++;\n    } else {\n      sortArray.push(right[j]);\n      j++;\n    }\n\n    k++;\n  }\n\n  return sortArray.concat(left.slice(i)).concat(right.slice(j));\n}","map":{"version":3,"sources":["C:/Users/Danny/Desktop/Sorting Visualizer/my-app/src/SortingVisualizerAlgorithms/mergeSort.js"],"names":["mergeSort","array","animations","length","auxArray","slice","middlePoint","Math","floor","tempL","tempR","mergeSortHelper","left","right","mid","main","aux","animation","sortArray","i","j","k","push","concat"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,KAAD,IAAW;AAClC,QAAMC,UAAU,GAAG,EAAnB;;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB;AACrB,WAAOF,KAAP;AACD;;AAED,QAAMG,QAAQ,GAAGH,KAAK,CAACI,KAAN,EAAjB;AAEA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACE,MAAN,GAAe,CAA1B,CAApB;AACA,QAAMM,KAAK,GAAGR,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeC,WAAf,CAAd;AACA,QAAMI,KAAK,GAAGT,KAAK,CAACI,KAAN,CAAYC,WAAZ,CAAd;AAEA,SAAOK,eAAe,CACpBX,SAAS,CAACS,KAAD,CADW,EAEpBT,SAAS,CAACU,KAAD,CAFW,EAGpBJ,WAHoB,EAIpBL,KAJoB,EAKpBG,QALoB,EAMpBF,UANoB,CAAtB;AAQD,CApBM;;AAsBP,SAASS,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,GAAtC,EAA2CC,IAA3C,EAAiDC,GAAjD,EAAsDC,SAAtD,EAAiE;AAC/D,MAAIC,SAAS,GAAG,EAAhB;AAEA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,SAAOF,CAAC,GAAGP,IAAI,CAACT,MAAT,IAAmBiB,CAAC,GAAGP,KAAK,CAACV,MAApC,EAA4C;AAC1Cc,IAAAA,SAAS,CAACK,IAAV,CAAe,CAACH,CAAD,EAAIC,CAAJ,CAAf;AACAH,IAAAA,SAAS,CAACK,IAAV,CAAe,CAACH,CAAD,EAAIC,CAAJ,CAAf;;AACA,QAAIR,IAAI,CAACO,CAAD,CAAJ,IAAWN,KAAK,CAACO,CAAD,CAApB,EAAyB;AACvBF,MAAAA,SAAS,CAACI,IAAV,CAAeV,IAAI,CAACO,CAAD,CAAnB;AAEAA,MAAAA,CAAC;AACF,KAJD,MAIO;AACLD,MAAAA,SAAS,CAACI,IAAV,CAAeT,KAAK,CAACO,CAAD,CAApB;AAEAA,MAAAA,CAAC;AACF;;AACDC,IAAAA,CAAC;AACF;;AAED,SAAOH,SAAS,CAACK,MAAV,CAAiBX,IAAI,CAACP,KAAL,CAAWc,CAAX,CAAjB,EAAgCI,MAAhC,CAAuCV,KAAK,CAACR,KAAN,CAAYe,CAAZ,CAAvC,CAAP;AACD","sourcesContent":["export const mergeSort = (array) => {\r\n  const animations = [];\r\n  if (array.length <= 1) {\r\n    return array;\r\n  }\r\n\r\n  const auxArray = array.slice();\r\n\r\n  const middlePoint = Math.floor(array.length / 2);\r\n  const tempL = array.slice(0, middlePoint);\r\n  const tempR = array.slice(middlePoint);\r\n\r\n  return mergeSortHelper(\r\n    mergeSort(tempL),\r\n    mergeSort(tempR),\r\n    middlePoint,\r\n    array,\r\n    auxArray,\r\n    animations\r\n  );\r\n};\r\n\r\nfunction mergeSortHelper(left, right, mid, main, aux, animation) {\r\n  let sortArray = [];\r\n\r\n  let i = 0;\r\n  let j = 0;\r\n  let k = 0;\r\n\r\n  while (i < left.length && j < right.length) {\r\n    animation.push([i, j]);\r\n    animation.push([i, j]);\r\n    if (left[i] <= right[j]) {\r\n      sortArray.push(left[i]);\r\n\r\n      i++;\r\n    } else {\r\n      sortArray.push(right[j]);\r\n\r\n      j++;\r\n    }\r\n    k++;\r\n  }\r\n\r\n  return sortArray.concat(left.slice(i)).concat(right.slice(j));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}