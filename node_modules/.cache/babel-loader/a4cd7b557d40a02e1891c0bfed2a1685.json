{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danny\\\\Desktop\\\\Sorting Visualizer\\\\my-app\\\\src\\\\SortingVisualizer\\\\SortingVisualizer.jsx\";\nimport React from \"react\";\nimport \"./SortingVisualizer.css\";\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 410; i++) {\n      array.push(randomInteger(5, 1000));\n    }\n\n    console.log(array);\n    console.log(this.setState({\n      array\n    }));\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Sorting Visualizer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Reset Array\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Merge Sort\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Quick Sort\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Insertion Sort\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Selection Sort\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Heap Sort\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Bubble Sort\"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, array.map((value, x) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: x,\n      style: {\n        height: `${value}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Danny/Desktop/Sorting Visualizer/my-app/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","randomInteger","min","max","Math","floor","random","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","console","log","setState","render","map","value","x","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;AAED,eAAe,MAAMK,iBAAN,SAAgCP,KAAK,CAACQ,SAAtC,CAAgD;AAC7DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,UAAMF,KAAK,GAAG,EAAd;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BH,MAAAA,KAAK,CAACI,IAAN,CAAWf,aAAa,CAAC,CAAD,EAAI,IAAJ,CAAxB;AACD;;AACDgB,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd,CAAZ;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKG,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAEiE,GAFjE,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAGgE,GAHhE,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAIgE,GAJhE,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAKoE,GALpE,eAME;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,EAMoE,GANpE,eAOE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAO+D,GAP/D,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EAQiE,GARjE,eASE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACS,GAAN,CAAU,CAACC,KAAD,EAAQC,CAAR,kBACT;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAEA,CAFP;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAG,GAAEF,KAAM;AAAnB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CATF,CADF;AAqBD;;AA/C4D","sourcesContent":["import React from \"react\";\r\nimport \"./SortingVisualizer.css\";\r\n\r\nfunction randomInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n\r\n    for (let i = 0; i < 410; i++) {\r\n      array.push(randomInteger(5, 1000));\r\n    }\r\n    console.log(array);\r\n    console.log(this.setState({ array }));\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1>Sorting Visualizer</h1>\r\n        <button onClick={() => this.resetArray()}>Reset Array</button>{\" \"}\r\n        <button onClick={() => this.resetArray()}>Merge Sort</button>{\" \"}\r\n        <button onClick={() => this.resetArray()}>Quick Sort</button>{\" \"}\r\n        <button onClick={() => this.resetArray()}>Insertion Sort</button>{\" \"}\r\n        <button onClick={() => this.resetArray()}>Selection Sort</button>{\" \"}\r\n        <button onClick={() => this.resetArray()}>Heap Sort</button>{\" \"}\r\n        <button onClick={() => this.resetArray()}>Bubble Sort</button>{\" \"}\r\n        <div className=\"array-container\">\r\n          {array.map((value, x) => (\r\n            <div\r\n              className=\"array-bar\"\r\n              key={x}\r\n              style={{ height: `${value}px` }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}